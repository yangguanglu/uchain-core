//plugins {
//    id 'java'
//}

group 'uchain'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    baseName = 'uchainCLI'
    classifier = null
    version = '1.0-SNAPSHOT'
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
}

repositories {
    mavenCentral()
}

configurations.all {
    exclude group: 'ch.qos.logback'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
    runtime.exclude group: "'ch.qos.logback'"
    runtime.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    dependencies {
        compile rootProject
        compile group: 'org.projectlombok', name: 'lombok', version: '1.18.2'
        compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.0.1'
        compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.0.1'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.3.5'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.3.5'
        compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.3.5'
        compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

jar {
    String someString = ''
    configurations.runtime.each {someString = someString + " lib\\"+it.name}

    manifest {
        attributes 'Main-Class': 'APP'
        attributes 'Class-Path': someString
    }
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task copyJar(type: Copy){
    from configurations.runtime
    into ('build/libs/lib')
}

task release(type: Copy,dependsOn: [build,copyJar]) {
    from  'conf'
    into ('build/libs/conf')
}